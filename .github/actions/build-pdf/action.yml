name: Build PDF

inputs:
  lang:
    description: Documentation language
    required: false
    default: "en"

outputs:
  pdf_path:
    description: Path to resulting PDF
    value: ${{ steps.set-output.outputs.pdf }}

runs:
  using: composite
  steps:
    - name: Install PowerShell
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y powershell
    - name: Install ImageMagick
      shell: bash
      run: sudo apt-get install -y imagemagick
    - name: Install ghostscript
      shell: bash
      run: sudo apt-get install -y ghostscript
    - name: Install GitHub CLI
      shell: bash
      run: sudo apt-get install -y gh
    - name: Create output directories
      shell: bash
      run: |
        mkdir -p ./.github/workflows/bin/temp
        mkdir -p ./.github/workflows/bin/markdown
        mkdir -p ./.github/workflows/bin/pdf
    - name: Run PowerShell merge script
      shell: pwsh
      run: |
        ./scripts/Merge-MarkdownFiles.ps1 -Lang ${{ inputs.lang }}
    - name: Fix logo and copy images
      shell: bash
      run: |
        cp -r ./.github/workflows/bin/markdown/images ./images
        sed -i '/!\[\](images\/qlcplus\.svg)/d' ./.github/workflows/bin/markdown/qlcplus-docs.md
    - name: Normalize image DPI
      shell: bash
      run: |
        for file in ./images/*.{jpg,jpeg,png,tiff,bmp}; do
          if [[ -f "$file" ]]; then
            convert "$file" -units PixelsPerInch -density 96 "$file"
          fi
        done
    - name: Get latest release tag
      id: get_release
      shell: bash
      env:
        GH_TOKEN:  ${{ github.token }}
      run: |
        RELEASE=$(gh release view --json tagName --jq .tagName || echo "")
        echo "LATEST_RELEASE=$RELEASE" >> $GITHUB_ENV
    - name: Put current date into a variable
      shell: bash
      run: echo "EXPORT_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}
    - name: Build PDF
      uses: docker://pandoc/extra
      with:
        args: >-
          -s -o ./.github/workflows/bin/temp/QLCplusDocumentation.pdf
          ./.github/workflows/bin/markdown/qlcplus-docs.md
          --listings
          --pdf-engine=lualatex
          -V papersize=a4
          -V geometry:margin=1.5cm
          -V classoption=oneside
          -V indent=false
          -V toc=true
          -V toc-title="Table of Contents"
          -V mainfont="Source Sans Pro"
          -V sansfont="Source Sans Pro"
          -f markdown-raw_tex
    - name: Create Title Page Markdown
      shell: bash
      run: |
        echo '![â€‹](images/qlcplus.svg){ style="width: 50%; margin: auto;" }' >> ./.github/workflows/bin/temp/titlepage.md
    - name: Convert Title Page to PDF
      uses: docker://pandoc/extra
      with:
        args: >-
          -s -o ./.github/workflows/bin/temp/titlepage.pdf
          ./.github/workflows/bin/temp/titlepage.md
          --pdf-engine=lualatex
          --template=./scripts/template.tex
          --verbose
          -V mainfont="Source Sans Pro"
          -V sansfont="Source Sans Pro"
          -V title="Q Light Controller + Documentation"
          -V subtitle="Comprehensive Guide"
          -V author="docs.qlcplus.org"
          -V date="${{ env.EXPORT_DATE }}"
          -V release="${{ env.LATEST_RELEASE }}"
    - name: Combine Title Page and Documentation PDFs
      shell: bash
      run: |
        gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=./.github/workflows/bin/pdf/qlcplus-docs-${{ inputs.lang }}.pdf ./.github/workflows/bin/temp/titlepage.pdf ./.github/workflows/bin/temp/QLCplusDocumentation.pdf
    - name: Cleanup temporary items
      shell: bash
      run: |
        rm -rf ./.github/workflows/bin/temp/
        rm -rf ./.github/workflows/bin/markdown/images/
    - id: set-output
      shell: bash
      run: echo "pdf=./.github/workflows/bin/pdf/qlcplus-docs-${{ inputs.lang }}.pdf" >> $GITHUB_OUTPUT
