name: Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Existing release tag'
        required: true
        type: string
        
permissions:
  contents: write
      
jobs:
  detect-langs:
    runs-on: ubuntu-latest
    outputs:
      langs: ${{ steps.setlangs.outputs.langs }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - id: setlangs
        run: |
          langs=$(find pages -name '*_??.md' | sed -n 's/.*_\([A-Za-z][A-Za-z]\)\.md/\1/p' | tr '[:upper:]' '[:lower:]' | sort -u)
          langs="en $langs"
          json=$(printf '%s\n' $langs | jq -R . | jq -sc .)
          echo "langs=$json" >> "$GITHUB_OUTPUT"

  build_release:
    needs: detect-langs
    name: build_release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        lang: ${{ fromJson(needs.detect-langs.outputs.langs) }}
    steps:
      - name: checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set version from tag
        id: set_version
        run: |
          VERSION="${{ github.event.inputs.tag }}"
          if [ -z "$VERSION" ]; then
            VERSION="${GITHUB_REF#refs/tags/}"
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - id: build
        uses: ./.github/actions/build-pdf
        with:
          lang: ${{ matrix.lang }}

      - name: Upload PDF asset to release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{ steps.set_version.outputs.version }}" "${{ steps.build.outputs.pdf_path }}" --clobber
